services:
  ### REVERSE PROXY ###
  traefik:
    image: traefik:v3.0
    container_name: traefik
    restart: unless-stopped
    command:
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.leresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.leresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.leresolver.acme.email=${EMAIL}"
      - "--certificatesresolvers.leresolver.acme.storage=/letsencrypt/acme.json"
      - "--accesslog=true"
      - "--accesslog.filepath=/traefik.log"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080" # Optional: Traefik dashboard
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "${ROOT}/MediaCenter/config/traefik/acme:/letsencrypt"
      - ./traefik.log:/traefik.log
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.${HOSTNAME}`)"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.routers.traefik.tls.certresolver=leresolver"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.middlewares.auth.basicauth.users=admin:$2y$10$1HNS0N7GZQWqqZBfQhwR7OFhrKkoDCK84wklCQd3Yk.i2/iroa53y" # Use `htpasswd`
      - "traefik.http.routers.traefik.middlewares=auth"

  ### DOWNLOADERS ###
  DMB:
    container_name: DMB
    image: iampuid0/dmb:latest ## Optionally, specify a specific version of DMB w/ image: iampuid0/dmb:2.0.0
    stop_grace_period: 30s ## Adjust as need to allow for graceful shutdown of the container
    shm_size: 128mb ## Increased for PostgreSQL
    stdin_open: true ## docker run -i
    tty: true ## docker run -t
    volumes:
      - ${ROOT}/MediaCenter/config/DMB/config:/config ## Location of configuration files. If a Zurg config.yml and/or Zurg app is placed here, it will be used to override the default configuration and/or app used at startup.
      - ${ROOT}/MediaCenter/config/DMB/log:/log ## Location for logs
      - ${ROOT}/MediaCenter/config/DMB/Zurg/RD:/zurg/RD ## Location for Zurg RealDebrid active configuration
      - ${ROOT}/MediaCenter/config/DMB/Zurg/mnt:/data:shared ## Location for rclone mount to host
      - ${ROOT}/MediaCenter/config/DMB/PostgreSQL/data:/postgres_data ## Location for PostgreSQL database
      - ${ROOT}/MediaCenter/config/DMB/pgAdmin4/data:/pgadmin/data ## Location for pgAdmin 4 data
      - ${ROOT}/MediaCenter/config/DMB/Zilean/data:/zilean/app/data ## Location for Zilean data
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - ZURG_INSTANCES_REALDEBRID_API_KEY=${RD_API_KEY}
      - DMB_LOG_LEVEL=INFO
    ports:
      - "3005:3005" ## DMB Frontend
      - "5050:5050" ## pgAdmin 4
    devices:
      - /dev/fuse:/dev/fuse:rwm
    cap_add:
      - SYS_ADMIN
    security_opt:
      - apparmor:unconfined
      - no-new-privileges
  decypharr:
    image: cy01/blackhole:latest # or cy01/blackhole:beta
    container_name: decypharr
    ports:
      - 8000:8282 # qBittorrent
      - 8111:8181 # Proxy
    user: ${PUID}:${PGID}
    volumes:
      - ${HDDSTORAGE}:/MediaCenterBox
      - ${ROOT}/MediaCenter/config/decypharr:/app # config.json must be in this directory
      - ${ROOT}/MediaCenter/config/DMB/Zurg/mnt:/data
      - ${ROOT}/MediaCenter/config/decypharr/mnt:/MediaCenterBox/RD-DL
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=002
      - QBIT_PORT=8282
      - PORT=8181
    restart: unless-stopped
    depends_on:
      DMB:
        condition: service_healthy
        restart: true
  deluge:
    container_name: deluge
    labels:
      - homepage.group=Downloaders
      - homepage.name=Deluge
      - homepage.icon=deluge.png
      - homepage.href=http://${HOSTNAME_LOCAL}:8112
      - homepage.description=Deluge Torrents (Private Trackers)
      - homepage.widget.type=deluge
      - homepage.widget.url=http://${HOSTNAME_LOCAL}:8112
      - homepage.widget.password=deluge
      - homepage.widget.enableLeechProgress=true
    image: linuxserver/deluge:latest
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${ROOT}/MediaCenter/config/deluge:/config
      - ${HDDSTORAGE}:/MediaCenterBox
    network_mode: host

  ### Mangas Download & Processing ###
  suwayomi:
    image: ghcr.io/suwayomi/suwayomi-server:preview
    container_name: suwayomi
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - FLARESOLVERR_ENABLED=true
      - FLARESOLVERR_URL=http://flaresolverr:8191
      - DOWNLOAD_AS_CBZ=true
      - EXTENSION_REPOS=["https://github.com/keiyoushi/extensions"]
    volumes:
      - ${ROOT}/MediaCenter/config/suwayomi:/home/suwayomi/.local/share/Tachidesk:shared
    ports:
      - 4567:4567
    restart: on-failure:3
  flaresolverr:
    image: ghcr.io/thephaseless/byparr:latest
    container_name: flaresolverr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    ports:
      - "8191:8191"
    restart: unless-stopped
  ## This service transforms the downloaded CBZ from suwayomi into something more palatable for Jellyfin
  flattener:
    build:
      context: ./suwayomi-flattener
    container_name: flattener
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${ROOT}/MediaCenter/config/flattener:/state
      - ${ROOT}/MediaCenter/config/suwayomi/downloads/mangas:/input:ro
      - ${HDDSTORAGE}/Completed/Suwayomi-Comics:/output
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  ### INDEXERS ###
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    labels:
      - homepage.group=Indexers
      - homepage.name=Prowlarr
      - homepage.icon=prowlarr.png
      - homepage.href=http://${HOSTNAME_LOCAL}:9696
      - homepage.description=Prowlarr Indexers
      - homepage.widget.type=prowlarr
      - homepage.widget.url=http://prowlarr:9696
      - homepage.widget.key=${PROWLARR_API_KEY}
    container_name: prowlarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${ROOT}/MediaCenter/config/prowlarr:/config
    restart: unless-stopped
    ports:
      - 9696:9696
  sonarr:
    container_name: sonarr
    labels:
      - homepage.group=Indexers
      - homepage.name=Sonarr
      - homepage.icon=sonarr.png
      - homepage.href=http://${HOSTNAME_LOCAL}:8989
      - homepage.description=Non-4K Series
      - homepage.widget.type=sonarr
      - homepage.widget.url=http://sonarr:8989
      - homepage.widget.key=${SONARR_API_KEY}
    image: linuxserver/sonarr:latest
    restart: unless-stopped
    ports:
      - 8989:8989
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${ROOT}/MediaCenter/config/sonarr:/config
      - ${ROOT}/MediaCenter/config/decypharr/mnt:/MediaCenterBox/RD-DL
      - ${ROOT}/MediaCenter/config/DMB/Zurg/mnt:/data
      - ${HDDSTORAGE}:/MediaCenterBox
    depends_on:
      decypharr:
        condition: service_healthy
        restart: true
  sonarr-4k:
    container_name: sonarr-4k
    labels:
      - homepage.group=Indexers
      - homepage.name=Sonarr 4K
      - homepage.icon=sonarr.png
      - homepage.href=http://${HOSTNAME_LOCAL}:8888
      - homepage.description=4K Series
      - homepage.widget.type=sonarr
      - homepage.widget.url=http://sonarr-4k:8989
      - homepage.widget.key=${SONARR_4K_API_KEY}
    image: linuxserver/sonarr:latest
    restart: unless-stopped
    ports:
      - 8888:8989
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${ROOT}/MediaCenter/config/sonarr-4k:/config
      - ${ROOT}/MediaCenter/config/decypharr/mnt:/MediaCenterBox/RD-DL
      - ${ROOT}/MediaCenter/config/DMB/Zurg/mnt:/data
      - ${HDDSTORAGE}:/MediaCenterBox
    depends_on:
      decypharr:
        condition: service_healthy
        restart: true
  radarr:
    container_name: radarr
    labels:
      - homepage.group=Indexers
      - homepage.name=Radarr
      - homepage.icon=radarr.png
      - homepage.href=http://${HOSTNAME_LOCAL}:7878
      - homepage.description=Non-4K Movies
      - homepage.widget.type=radarr
      - homepage.widget.url=http://radarr:7878
      - homepage.widget.key=${RADARR_API_KEY}
    image: linuxserver/radarr:latest
    restart: unless-stopped
    ports:
      - 7878:7878
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${ROOT}/MediaCenter/config/radarr:/config
      - ${ROOT}/MediaCenter/config/decypharr/mnt:/MediaCenterBox/RD-DL
      - ${ROOT}/MediaCenter/config/DMB/Zurg/mnt:/data
      - ${HDDSTORAGE}:/MediaCenterBox
    depends_on:
      decypharr:
        condition: service_healthy
        restart: true
  radarr-4k:
    container_name: radarr-4k
    labels:
      - homepage.group=Indexers
      - homepage.name=Radarr 4K
      - homepage.icon=radarr.png
      - homepage.href=http://${HOSTNAME_LOCAL}:7979
      - homepage.description=4K Movies
      - homepage.widget.type=radarr
      - homepage.widget.url=http://radarr-4k:7878
      - homepage.widget.key=${RADARR_4K_API_KEY}
    image: linuxserver/radarr:latest
    restart: unless-stopped
    ports:
      - 7979:7878
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${ROOT}/MediaCenter/config/radarr-4k:/config
      - ${ROOT}/MediaCenter/config/decypharr/mnt:/MediaCenterBox/RD-DL
      - ${ROOT}/MediaCenter/config/DMB/Zurg/mnt:/data
      - ${HDDSTORAGE}:/MediaCenterBox
    depends_on:
      decypharr:
        condition: service_healthy
        restart: true

  ### MEDIA SERVER ###
  jellyfin:
    container_name: jellyfin
    labels:
      - homepage.group=Media
      - homepage.name=Jellyfin
      - homepage.icon=jellyfin.png
      - homepage.href=https://media.${HOSTNAME}
      - homepage.description=Media server
      - homepage.widget.type=jellyfin
      - homepage.widget.url=http://jellyfin:8096
      - homepage.widget.key=${JELLYFIN_API_KEY}
      - "traefik.enable=true"
      - "traefik.http.routers.jellyfin.rule=Host(`media.${HOSTNAME}`)"
      - "traefik.http.routers.jellyfin.entrypoints=websecure"
      - "traefik.http.routers.jellyfin.tls=true"
      - "traefik.http.routers.jellyfin.tls.certresolver=leresolver"
      - "traefik.http.services.jellyfin.loadbalancer.server.port=8096"
    image: lscr.io/linuxserver/jellyfin
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - DOCKER_MODS=linuxserver/mods:jellyfin-opencl-intel|ghcr.io/themepark-dev/theme.park:jellyfin
      - TP_COMMUNITY_THEME=true
      - TP_THEME=rose-pine-moon
    volumes:
      - ${ROOT}/MediaCenter/config/jellyfin:/config
      - ${ROOT}/MediaCenter/config/jellyfin/transcode:/transcode
      - ${ROOT}/MediaCenter/config/DMB/Zurg/mnt:/data
      - ${HDDSTORAGE}/Completed:/MediaCenterBox
      - ~/IPTVBoss/output:/IPTVBoss
    devices:
      - /dev/dri:/dev/dri
    # ports:
    #   - 8096:8096
    depends_on:
      DMB:
        condition: service_healthy
        restart: true

  ### HOUSEKEEPING ###
  watchtower:
    container_name: watchtower
    image: containrrr/watchtower:amd64-latest
    restart: unless-stopped
    environment:
      - TZ=${TZ}
      - WATCHTOWER_SCHEDULE= 0 0 6 * * *
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_REMOVE_VOLUMES=true
      - WATCHTOWER_NOTIFICATIONS_LEVEL=debug
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  homepage:
    image: ghcr.io/gethomepage/homepage:latest
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.homepage.rule=Host(`home.${HOSTNAME}`)"
      - "traefik.http.routers.homepage.entrypoints=websecure"
      - "traefik.http.routers.homepage.tls=true"
      - "traefik.http.routers.homepage.tls.certresolver=leresolver"
      - "traefik.http.services.homepage.loadbalancer.server.port=3000"
      - "traefik.http.middlewares.auth.basicauth.users=admin:$2y$10$1HNS0N7GZQWqqZBfQhwR7OFhrKkoDCK84wklCQd3Yk.i2/iroa53y" # Use `htpasswd`
    container_name: homepage
    ports:
      - 1903:3000
    volumes:
      - ${ROOT}/MediaCenter/config/homepage:/app/config # Make sure your local config directory exists
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      HOMEPAGE_ALLOWED_HOSTS: home.${HOSTNAME}

  ### OTHER ###
  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    labels:
      - homepage.group=Requests
      - homepage.name=Jellyseerr
      - homepage.icon=jellyseerr.png
      - homepage.href=https://osr.${HOSTNAME}
      - homepage.description=User media requests
      - homepage.widget.type=jellyseerr
      - homepage.widget.url=http://jellyseerr:5055
      - homepage.widget.key=${JELLYSEERR_API_KEY}
      - "traefik.enable=true"
      - "traefik.http.routers.jellyseerr.rule=Host(`osr.${HOSTNAME}`)"
      - "traefik.http.routers.jellyseerr.entrypoints=websecure"
      - "traefik.http.routers.jellyseerr.tls=true"
      - "traefik.http.routers.jellyseerr.tls.certresolver=leresolver"
      - "traefik.http.services.jellyseerr.loadbalancer.server.port=5055"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - LOG_LEVEL=debug
    ports:
      - 5055:5055
    volumes:
      - ${ROOT}/MediaCenter/config/jellyseerr:/app/config
    restart: unless-stopped

  thelounge:
    image: ghcr.io/thelounge/thelounge:latest
    container_name: thelounge
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.thelounge.rule=Host(`irc.${HOSTNAME}`)"
      - "traefik.http.routers.thelounge.entrypoints=websecure"
      - "traefik.http.routers.thelounge.tls=true"
      - "traefik.http.routers.thelounge.tls.certresolver=leresolver"
      - "traefik.http.services.thelounge.loadbalancer.server.port=8096"
    ports:
      - "9000:9000"
    restart: always
    volumes:
      - ~/.thelounge:/var/opt/thelounge
